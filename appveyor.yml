image: Visual Studio 2019

version: '{build}'

install:
  - ps: >-
      $FileVersion = Get-Content $env:appveyor_build_folder\VERSION

      $Version = If ($env:appveyor_repo_branch -eq "release") {"$FileVersion"} Else {"$FileVersion.$env:appveyor_build_number"}

      Update-AppveyorBuild -Version $Version

  - ps: Start-FileDownload 'https://interactivebrokers.github.io/downloads/TWS%20API%20Install%201016.01.msi' -FileName 'TWS_API_Install_1016.01.msi'

  - cmd: >-
      start /wait msiexec /a "TWS_API_Install_1016.01.msi" /qb TARGETDIR=%cd%\tmp

      mkdir packages\client

      xcopy /e "tmp\TWS API\source\CSharpClient\client" packages\client

      dir packages\client

      xcopy /y packages\CSharpAPI.csproj packages\client\CSharpAPI.csproj

      cat packages\client\CSharpAPI.csproj

      del /s /q packages\client\Properties

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

configuration: Release

before_build:
  - nuget restore
  - dotnet restore
  
test_script:
  - cmd: dotnet test .\src\IB.CSharpApiClient.Tests\IB.CSharpApiClient.Tests.csproj
  
build:
  project: IB.CSharpApiClient.sln
  publish_nuget: true
  publish_nuget_symbols: true
  verbosity: normal

deploy:
  # Deploying to NuGet feed (MyGet.org)
  - provider: NuGet
    name: MyGet
    server: https://www.myget.org/F/inovitex/api/v2/package
    api_key:
      secure: UBKXVuF4UwMea9mcl8hGLaHxOTBu3GNgzPvuEUWIzU+Nf6a8eTtBRyKITBepZl6i
    skip_symbols: false
    symbol_server: https://www.myget.org/F/inovitex/symbols/api/v2/package
    artifact: /.*\.nupkg/